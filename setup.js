#!/usr/bin/env node

const fs = require('fs');
const readline = require('readline');
const crypto = require('crypto');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

function isValidEmail(email) {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

async function setup() {
  console.log('\nüéâ Welcome to Stuart Speaks Setup!');
  console.log('Let\'s configure your admin account and basic settings.\n');

  // Check if .env already exists
  if (fs.existsSync('.env')) {
    const overwrite = await question('‚ö†Ô∏è  .env file already exists. Overwrite it? (y/N): ');
    if (overwrite.toLowerCase() !== 'y' && overwrite.toLowerCase() !== 'yes') {
      console.log('Setup cancelled. Your existing .env file is unchanged.');
      rl.close();
      return;
    }
  }

  // Get admin email
  let adminEmail;
  while (!adminEmail) {
    const email = await question('üìß Enter your admin email address: ');
    if (isValidEmail(email)) {
      adminEmail = email;
    } else {
      console.log('‚ùå Please enter a valid email address.');
    }
  }

  // Generate secrets
  const sessionSecret = crypto.randomBytes(32).toString('hex');
  const configEncryptionKey = crypto.randomBytes(32).toString('hex');

  // Create .env content
  const envContent = `# Environment variables for Stuart Speaks TTS Backend
# Generated by setup script on ${new Date().toISOString()}

# Fish.Audio API (get from https://fish.audio)
FISH_API_KEY=your_fish_api_key_here
FISH_MODEL_ID=your_fish_model_id_here

# Email Configuration (for authentication codes)
PROTON_EMAIL=your_email@domain.com
PROTON_SMTP_TOKEN=your_smtp_token_here

# Session Security (auto-generated)
SESSION_SECRET=${sessionSecret}

# Google OAuth (get from Google Cloud Console)
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# Admin Configuration
ADMIN_EMAIL=${adminEmail}

# Configuration Encryption Key (auto-generated)
CONFIG_ENCRYPTION_KEY=${configEncryptionKey}

# Environment
NODE_ENV=development
`;

  // Write .env file
  fs.writeFileSync('.env', envContent);

  console.log('\n‚úÖ Setup complete!');
  console.log(`üìß Admin email set to: ${adminEmail}`);
  console.log('üîê Security keys generated automatically');
  console.log('\nüìù Next steps:');
  console.log('1. Edit .env file to add your API keys:');
  console.log('   - FISH_API_KEY (from https://fish.audio)');
  console.log('   - FISH_MODEL_ID (from Fish.Audio)');
  console.log('   - PROTON_EMAIL and PROTON_SMTP_TOKEN (optional, for email auth)');
  console.log('   - GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET (optional, for Google OAuth)');
  console.log('\n2. Start the development server:');
  console.log('   npm run dev');
  console.log('\n3. Open http://localhost:3003/stuartvoice/');
  console.log(`4. Login with your admin email (${adminEmail}) to access configuration panel`);

  rl.close();
}

// Run setup
setup().catch(console.error);